{"version":3,"sources":["component/covid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAkFeA,EA/ED,WAEV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,+EAEIC,MAAM,0CAFV,cAEPC,EAFO,gBAGYA,EAAIC,OAHhB,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALhB,kDAQbF,QAAQC,IAAR,MARa,0DAAH,qDAgBlB,OAJAE,qBAAU,WACNT,MACD,IAGC,qCACG,sDACA,8DAEA,+BACI,oBAAIU,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,uCAAzB,cACA,mBAAGA,UAAU,wBAAb,0BAIb,oBAAIA,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,yCAAzB,gBACA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKa,mBAIxD,oBAAID,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,yCAAzB,gBACA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKc,mBAIxD,oBAAIF,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,yCAAzB,YACA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKe,gBAIxD,oBAAIH,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,yCAAzB,aACA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKgB,gBAIxD,oBAAIJ,UAAU,OAAd,SACI,qBAAKA,UAAU,YAAf,SACK,sBAAKA,UAAU,aAAf,UACI,oBAAGA,UAAU,YAAb,UAAyB,wCAAzB,cACA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKiB,gCC9DxDC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.e4d7d85f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './covid.css';\r\n\r\nconst Covid = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        try{\r\n            const res =await fetch('https://api.covid19india.org/data.json');\r\n            const actualData = await res.json();\r\n            console.log(actualData.statewise[0]);\r\n            setData(actualData.statewise[0]);\r\n        }catch(err)\r\n        {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []); // [] represents when page loads first time then only call useEffect function\r\n\r\n    return (\r\n        <>\r\n           <h1> ðŸ”´ LIVE  </h1>\r\n           <h2>COVID-19 CORONAVIRUS TRACKER</h2> \r\n\r\n           <ul>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>OUR</span> COUNTRY</p>\r\n                            <p className=\"card_total card_small\">INDIA</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>TOTAL</span> RECOVERED</p>\r\n                            <p className=\"card_total card_small\">{data.recovered}</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>TOTAL</span> CONFIRMED</p>\r\n                            <p className=\"card_total card_small\">{data.confirmed}</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>TOTAL</span> DEATH</p>\r\n                            <p className=\"card_total card_small\">{data.deaths}</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>TOTAL</span> ACTIVE</p>\r\n                            <p className=\"card_total card_small\">{data.active}</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n               <li className=\"card\">\r\n                   <div className=\"card_main\">\r\n                        <div className=\"card_inner\">\r\n                            <p className=\"card_name\"><span>LAST</span> UPDATED</p>\r\n                            <p className=\"card_total card_small\">{data.lastupdatedtime}</p>\r\n                        </div>\r\n                   </div>\r\n               </li>\r\n           </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid\r\n","import React from 'react';\nimport Covid from './component/covid';\n\nconst App = () => {\n  return (\n    <>\n      <Covid />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}